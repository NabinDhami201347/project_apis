// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
// DATABASE_URL="mysql://root@localhost:3306/Hamro College"
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Student {
  id      Int      @id @default(autoincrement())
  name    String
  email   String
  role    Role     @default(STUDENT)
  profile Profile?
}

model Profile {
  id            Int       @id @default(autoincrement())
  photo         String?
  address       String?
  phone_number  String
  date_of_birth DateTime?
  joinedDate    DateTime?

  Student   Student? @relation(fields: [studentId], references: [id])
  studentId Int?     @unique

  Teacher   Teacher? @relation(fields: [teacherId], references: [id])
  teacherId Int?     @unique

  account Account?
  books   Book[]
}

model Teacher {
  id            Int      @id @default(autoincrement())
  name          String
  date_of_birth DateTime
  email         String
  address       String
  phone_number  String
  role          Role     @default(TEACHER)

  profile  Profile?
  subjects Subject[] @relation("TeacherSubject")
}

model Department {
  id    Int    @id @default(autoincrement())
  title String

  semesters Semester[]
}

model Semester {
  id          Int    @id @default(autoincrement())
  title       String
  description String
  total_fee   Int

  subjects     Subject[]
  Department   Department? @relation(fields: [departmentId], references: [id])
  departmentId Int?
}

model Subject {
  id           Int    @id @default(autoincrement())
  title        String
  description  String
  credit_hours Int

  Semester   Semester? @relation(fields: [semesterId], references: [id])
  semesterId Int?
  books      Book[]
  teachers   Teacher[] @relation("TeacherSubject")
}

model Book {
  book_id     Int     @id @default(autoincrement())
  title       String
  description String
  cover_image String?
  quantity    Int?    @default(1)

  Library   Library? @relation(fields: [libraryId], references: [id])
  libraryId Int?

  Profile   Profile? @relation(fields: [studentId], references: [id])
  studentId Int?

  Subject   Subject? @relation(fields: [subjectId], references: [id])
  subjectId Int?
}

model Library {
  id        Int    @id @default(autoincrement())
  in_charge String
  books     Book[]
}

model Account {
  id          Int      @id @default(autoincrement())
  paid_amount Int
  due_amount  Int
  validity    DateTime

  transaction Transaction?
  profile     Profile      @relation(fields: [profileId], references: [id])
  profileId   Int          @unique
}

model Transaction {
  id           Int    @id @default(autoincrement())
  amount       Int
  payment_mode String
  description  String

  account   Account  @relation(fields: [accountId], references: [id])
  accountId Int      @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Notice {
  id          Int      @id @default(autoincrement())
  title       String   @db.VarChar(255)
  summary     String   @db.VarChar(255)
  description String
  tag         String
  image       String?  @db.VarChar(255)
  published   Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Post {
  id        Int      @id @default(autoincrement())
  title     String   @db.VarChar(255)
  content   String?
  authorId  Int
  image     String?  @db.VarChar(255)
  published Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  STUDENT
  TEACHER
  ADMIN
}
